// Grid Columns
//
// Main CSS grid layout
//
// Definition:
// %grid-columns {
//   display: grid;
//   grid-template-columns: [full-start] minmax(20px, 1fr) [main-start] minmax(0, $inner-max-width) [main-end] minmax(20px, 1fr) [full-end];
//   @include from(10) {
//     grid-template-columns: [full-start] minmax(40px, 1fr) [main-start] minmax(0, $inner-max-width) [main-end] minmax(40px, 1fr) [full-end];
//   }
// }
//
// Usage:
// .sample {
//   @extend grid-columns;
// }
//
// Compiled:
// .sample {
//   display: grid;
//   grid-template-columns: [full-start] minmax(20px, 1fr) [main-start] minmax(0, 1500px) [main-end] minmax(20px, 1fr) [full-end];
// }
// @media (min-width: 1000px) {
//   .sample {
//     grid-template-columns: [full-start] minmax(40px, 1fr) [main-start] minmax(0, 1500px) [main-end] minmax(40px, 1fr) [full-end];
//   }
// }
//

@mixin generate-grid-columns($gutter: 24px, $margins: 80px) {
	gap: 0 $gutter;
	grid-template-columns:
		[full-start]
		minmax($margins - $gutter, 1fr)
		[main-start]
		minmax(0, $inner-max-width)
		[main-end]
		minmax($margins - $gutter, 1fr)
		[full-end];
}

// Styleguide Sass Mixins.Grid Columns
%grid-columns {
	display: grid;

	$gutter: 12px;
	$margins: 16px;
	@include generate-grid-columns($gutter, $margins);

	@include from($layout-switch) {
		$gutter: 24px;
		$margins: 80px;
		@include generate-grid-columns($gutter, $margins);
	}
}
